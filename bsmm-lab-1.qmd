---
title: "BSMM-lab-1"
subtitle: "BSMM 8740 Fall 2023"
author: "Sepideh AhmadiTalei"
date: "September 18, 2023"
format: html
editor: visual
self-contained: true
---

```{}
```

## Setup

Load packages and data:

```{r load-pkg-data}
#| message: false
# install the package 'Lahman'
install.packages('Lahman')
# load the package
library(Lahman)
```

## Exercises

### Exercise 1

```{r}
dim(Teams)
```

```{r glimpse-data}
dplyr::glimpse(Teams |> head())
```

The `Teams` dataset has \_*3015*\_ observations and \_*48*\_ variables.

### Exercise 2

```{r team W/L record during years 2004-2012}
library(magrittr)
mets <- Teams  %>% 
  dplyr::filter(teamID == "NYN")
my_mets <- mets %>% 
  dplyr::filter(yearID %in% 2004:2012) %>%
  dplyr::select(yearID,G,W,L)

my_mets
```

### Exercise 3

```{r}
mets_ben <- Teams |>
  dplyr::select(yearID, teamID, G, W, L, RA, R) |>
  dplyr::filter(teamID == "NYN" & yearID %in% 2004:2012)
mets_ben
```

```{r renaming variable}
mets_ben <- mets_ben |>
  dplyr::rename(RS = R)    # new name = old name
mets_ben
```

### Exercise 4

```{r Actual winning percentage calculation}
mets_ben <- mets_ben |>
  dplyr::mutate(WPct = W/G)
mets_ben
```

```{r calculation of expected winning percentage based on the model}
mets_ben <- mets_ben |>
  dplyr::mutate(W_hat = 1/(1+((RA*RA)/(RS*RS)))) 
mets_ben
```

```{r calculation of expected number of wins based on the model}
mets_ben <- mets_ben |>
  #The expected number of wins is then equal to the product of the expected winning percentage times the number of games.
  dplyr::mutate(W_Exp = W_hat*G) 
mets_ben
```

### Exercise 5

```{r Determining seasons better than expectation}
mets_ben_better <- mets_ben |>
  dplyr::filter(W > W_Exp)

mets_ben_better
```

The Mets were better than expectation in years *2006*, *2007* and *2012*.

```{r Determining seasons worse than expectation}
mets_ben_Worse <- mets_ben |>
  dplyr::filter(W < W_Exp)

mets_ben_Worse
```

The Mets were worse than expectation in years *2004, 2005, 2008*, *2009, 2010* and *2011*.

### Exercise 6

```{r Sorting from best year to worst year}
dplyr::arrange(mets_ben, desc(WPct))
```

### Exercise 7

```{r  Rank in terms of the teamâ€™s performance relative to the model}
mets_ben %>% 
  dplyr::mutate(Diff = WPct - W_hat) |>
  dplyr::arrange(desc(Diff))
```

### Exercise 8

```{r Summarize the Mets performance}
mets_ben |>
  dplyr::summarize(
    num_years = nrow(mets_ben),  
    total_W = sum(W), 
    total_L = sum(L), 
    total_WPct = mean(WPct), 
    sum_resid = sum(WPct - W_hat)
  )
```

Mets had a combined record of *728* wins and *730* losses, for an overall winning percentage of *49.9%*.

```         
```

### Exercise 9

```{r}
library(ggplot2)

```

```{r visualizing the relationship between the price and width of Ikea furniture}
ggplot(data = Ikea, aes(x = width, y = price)) +
  geom_point() + 
  labs(
    x = "Width of furniture", 
    y = "Price in USD", 
    title = "Graph of price of Ikea furniture based on the Width"
    )
```

...

### Exercise 10

```{r Discretizing based on the general managers}
mets_ben <- mets_ben |>
  dplyr::mutate(
    gm = dplyr::case_when(
      yearID == 2004 ~ "Jim Duquette",  
      yearID >= 2005 & yearID <= 2010 ~ "Omar Minaya",
      yearID >= 2011 ~ "Sandy Alderson"
    )
  )

mets_ben
```

### Exercise 11

```{r Summarizing based on the general managers}
mets_ben |>
  dplyr::group_by(gm) %>%
  dplyr::summarize(
    total_W = sum(W), 
    total_L = sum(L)
  )
```

```{}
```
